package com.accoladehq.calendar.dto;

import jakarta.validation.constraints.NotNull;
import lombok.Data;

import java.time.LocalDate;
import java.time.LocalTime;

import com.fasterxml.jackson.annotation.JsonFormat;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Request object for booking an appointment with a calendar owner.
 * <p>
 * This DTO is used by an invitee to request a booking in one of the available time slots.
 * </p>
 *
 * <p><b>Example JSON:</b></p>
 * <pre>
 * {
 *   "username": "john_doe",
 *   "date": "2025-08-15",
 *   "startTime": "10:00",
 *   "inviteeName": "Jane Smith",
 *   "inviteeEmail": "jane.smith@example.com"
 * }
 * </pre>
 *
 * <p>
 * Constraints:
 * <ul>
 *   <li>The {@code username} must belong to an existing calendar owner.</li>
 *   <li>The {@code date} must not be in the past.</li>
 *   <li>The {@code startTime} must match an available slot generated by the availability rules.</li>
 *   <li>Appointments are fixed at 60 minutes duration.</li>
 * </ul>
 */
@Data
public class BookRequest {

    /**
     * The username of the calendar owner with whom the appointment is being booked.
     */
    @NotNull
    private String username;

    /**
     * The date of the requested appointment.
     * <p>
     * Must not be in the past.
     * </p>
     */
    @NotNull
    private LocalDate date;

    /**
     * The start time of the appointment in {@code HH:mm} format.
     * <p>
     * Must match one of the available slots generated by the system.
     * </p>
     */
    @NotNull
    @JsonFormat(pattern = "HH:mm")
    @Schema(type = "string", example = "10:00", description = "Book start time in HH:mm format")
    private LocalTime startTime;

    /**
     * The name of the invitee booking the appointment.
     */
    @NotNull
    private String inviteeName;

    /**
     * The email address of the invitee booking the appointment.
     * <p>
     * This field is optional but recommended for sending confirmations or reminders.
     * </p>
     */
    private String inviteeEmail;

    /**
     * Default no-args constructor.
     */
    public BookRequest() {
    }

    /**
     * Constructs a new booking request with the provided details.
     *
     * @param username     the username of the calendar owner
     * @param date         the date of the appointment
     * @param startTime    the start time of the appointment
     * @param inviteeName  the name of the invitee
     * @param inviteeEmail the email of the invitee (optional)
     */
    public BookRequest(String username, LocalDate date, LocalTime startTime, String inviteeName, String inviteeEmail) {
        this.username = username;
        this.date = date;
        this.startTime = startTime;
        this.inviteeName = inviteeName;
        this.inviteeEmail = inviteeEmail;
    }
}
